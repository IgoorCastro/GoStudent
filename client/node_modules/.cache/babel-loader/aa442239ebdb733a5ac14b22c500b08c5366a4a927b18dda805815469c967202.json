{"ast":null,"code":"var _jsxFileName = \"B:\\\\4 Sem FATEC\\\\goStudent 3.0\\\\client\\\\src\\\\components\\\\Calendario\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as C from './styles';\nimport { useCalendarContext } from '../../context/DataContext';\nimport Axios from \"axios\";\nimport Input from '../Input';\nimport Button from '../Button';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendario = () => {\n  _s();\n  // --------------------------------- States ---------------------------------\n\n  // Context\n  const {\n    selecionarData\n  } = useCalendarContext();\n\n  // Pega o dia/ mês atual do sistema\n  const [mesAtual, setMesAtual] = useState(new Date().getMonth() + 1);\n  const [anoAtual, setAnoAtual] = useState(new Date().getFullYear());\n  // State de controle da data selecionada\n  const [dataSelecionada, setDataSelecionada] = useState(null);\n  // State de controle da box Adicionar tarefa\n  const [formData, setFormData] = useState({\n    title: '',\n    activityType: '',\n    subject: '',\n    date: '',\n    note: ''\n  });\n\n  // --------------------------------- Variaveis estaticas de controle ---------------------------------\n\n  // Cores de selação da data\n  const selectDateColor = '#3282B8';\n  const currentDateColor = 'rgb(66, 135, 245, 0.4)';\n\n  // Array para controle do titulo\n  // Varia de acordo com o mesAtual\n  const nomesDosMeses = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n\n  // --------------------------------- Funções de interação ---------------------------------\n\n  // Função do botão prixmo mês\n  const proximoMes = () => {\n    if (mesAtual === 12) {\n      //Verifica se o mês atual do calendario é Dezembro\n      setMesAtual(1); //Se for volta para o mês 1 e avança +1 no anoAtual\n      setAnoAtual(anoAtual + 1);\n    } else {\n      setMesAtual(mesAtual + 1);\n    }\n    setDataSelecionada(null);\n  };\n\n  // Função do botão prixmo mês\n  const mesAnterior = () => {\n    if (mesAtual === 1) {\n      //Verifica se o mês atual do calendario é Janeiro\n      setMesAtual(12); //Se for volta para o mês 12 e recua -1 no anoAtual\n      setAnoAtual(anoAtual - 1);\n    } else {\n      setMesAtual(mesAtual - 1);\n    }\n    setDataSelecionada(null);\n  };\n\n  // Função para lidar com a seleção de um dia\n  const handleSelecionarDia = (dia, mes, ano) => {\n    setDataSelecionada({\n      dia,\n      mes,\n      ano\n    });\n    selecionarData({\n      dia,\n      mes,\n      ano\n    });\n    let dateConvertDb = ano + \"/\" + mes + \"/\" + dia;\n    Axios.get(() => {\n      Axios.get(\"http://localhost:3001/getDateData\", {\n        date: dateConvertDb\n      }).then(response => {\n        console.log(response);\n      });\n    }, []);\n\n    // Construir a mensagem do alert com a data completa\n    //const mensagem = `Data selecionada: ${dia}/${mes}/${ano}`;\n    //alert(mensagem)\n  };\n\n  const helpRequest = () => {\n    alert(\"Desenvolver pagina de ajuda\");\n  };\n\n  // --------------------------------- Funções principais ---------------------------------\n\n  // Função responsavel por retornar a quantidade de dias de um determinado (ano, mês) sendo passado por parametro\n  // Cada mês tem sua quantidade de dias\n  const getDaysInMonth = (year, month) => {\n    const date = new Date(year, month - 1, 1); //Pega o primeiro dia do mes (ex: 1/9/2023 : outubro)\n    date.setMonth(date.getMonth() + 1); //Avança um mês (soma + 1 no mês, ex: 1/10/2023)\n    date.setDate(date.getDate() - 1); //Volta um dia para pegar o ultimo dia do mes (ex: 31/9/2023)\n    return date.getDate(); // Retorna apenas o dia\n  };\n\n  // Variaveis de controle de calendario\n  const numeroDeDias = getDaysInMonth(anoAtual, mesAtual); // Chama a função getDaysInMonth para pegar quantos dias a no mês\n  const primeiroDiaSemana = new Date(anoAtual, mesAtual - 1, 1).getDay(); // Armazena o dia da semana em que o mês começa (0 para domingo, 1 para segunda, etc.).\n  const linhas = Math.ceil((numeroDeDias + primeiroDiaSemana) / 7); // Calcula a quantidade de linhas para o calendario (ex: numeroDeDias=30 + primeiroDiaSemana=4 / 7'dias da semana')\n\n  // Função que verifica se o dia atual é igual ao dia que está sendo montado no calendario\n  const isDiaAtual = dia => {\n    const dataAtual = new Date(); // Pega o calendario do sistema\n    const diaAtual = dataAtual.getDate(); // Pega o dia atual do calendario\n    const mesAtualSelecionado = dataAtual.getMonth() + 1; // Pega o mês atual do sistema\n    return dia === diaAtual && mesAtual === mesAtualSelecionado; // Compara o dia que está sendo montado com o dia atual, mesma coisa para o mes (retorna um boolean)\n  };\n\n  // Função para criar um array bidimensional para representar os dias do calendario\n  const criarArrayDeDias = () => {\n    const dias = []; // Array que vai armazenar os dias do calendario\n    for (let linha = 0; linha < linhas; linha++) {\n      // Loop para percorrer as linhas do calendario calculada anteriormente (Quntidade de semanas do mês)\n      const semana = []; // Para cada linha, criamos um array vazio para representar os dias dessa semana\n      for (let diaDaSemana = 0; diaDaSemana < 7; diaDaSemana++) {\n        // Loop para percorrer os dias da semana (0 a 6, representando domingo a sábado)\n        const dia = linha * 7 + diaDaSemana - primeiroDiaSemana + 1; // Calculo do valor do dia atual (pode ser um valor positivo representando o dia do mês, ou null se estivermos antes do início do mês ou após o final do mês)\n        semana.push(dia > 0 && dia <= numeroDeDias ? dia : null); // Monta o array com os dias calculados (de domingo a sabado) \n      }\n\n      dias.push(semana);\n      // Monta o array dia com os dias da array da semana  ex: \n      // [null, null, 1, 2, 3, 4, 5], // Primeira semana\n      // [6, 7, 8, 9, 10, 11, 12],   // Segunda semana\n      // [13, 14, 15, 16, 17, 18, 19],  // Terceira semana\n      // [20, 21, 22, 23, 24, 25, 26],  // Quarta semana\n      // [27, 28, 29, 30, null, null, null]  // Quinta semana)\n    }\n\n    return dias;\n  };\n\n  // Função para controlar as cores do calendario dependendo de quantas atividades há no dia\n  const colorControl = (dia, mes, ano) => {\n    let dataTest = '11/10/2023'; // Data deve ter 2 registros\n    let testRegistros = 2; // Valor de teste reprensentando a quantidade de registros da 'data' no Db\n\n    // Data sendo escrita no calendario e para pesquisa no db\n    let data = dia + '/' + mes + '/' + ano;\n\n    // Verifica se há algum registro no Db\n    let registros = data === dataTest ? testRegistros : null;\n\n    // Checar no banco se há registros nesse dia\n    if (registros) {\n      let colorControl = 'rgb(242, 41, 59';\n      switch (registros) {\n        case 1:\n          return {\n            background: colorControl + ', 0.4'\n          };\n        case 2:\n          return {\n            background: colorControl + ', 0.6'\n          };\n        case 3:\n          return {\n            background: colorControl + ', 0.7'\n          };\n        case 4:\n          return {\n            background: colorControl + ', 0.9'\n          };\n        default:\n          return {\n            background: '#f9f9f9'\n          };\n      }\n    }\n\n    // Construir a mensagem do alert com a data completa\n    const mensagem = `Data: ${dia}/${mes}/${ano}`;\n    //alert(mensagem)\n  };\n\n  return /*#__PURE__*/_jsxDEV(C.MainContent, {\n    children: /*#__PURE__*/_jsxDEV(C.CalendarioContainer, {\n      children: [/*#__PURE__*/_jsxDEV(C.TitleContent, {\n        children: [/*#__PURE__*/_jsxDEV(C.Button, {\n          position: \"left\",\n          onClick: mesAnterior,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(C.Title, {\n          children: `${nomesDosMeses[mesAtual - 1]}  ${anoAtual}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(C.Button, {\n          position: \"right\",\n          onClick: proximoMes,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTable, {\n        children: [/*#__PURE__*/_jsxDEV(C.CalendarioThread, {\n          children: /*#__PURE__*/_jsxDEV(C.CalendarioTr, {\n            children: [/*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Dom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Seg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Ter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Qua\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Qui\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              children: \"Sab\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(C.CalendarioTBody, {\n          children: criarArrayDeDias().map((semana, index) => /*#__PURE__*/_jsxDEV(C.CalendarioTr, {\n            children: semana.map((dia, index) => /*#__PURE__*/_jsxDEV(C.CalendarioTd, {\n              onClick: () => {\n                if (dia !== null) handleSelecionarDia(dia, mesAtual, anoAtual);\n              },\n              children: /*#__PURE__*/_jsxDEV(C.RadiusContent, {\n                day: dia,\n                style: {\n                  // Data atual\n                  ...(dia !== null && isDiaAtual(dia) ? {\n                    background: currentDateColor,\n                    border: '1px solid #fff'\n                  } : {}),\n                  // Controle de cores de acordo com a quantidade de atv cadastradas \n                  ...colorControl(dia, mesAtual, anoAtual),\n                  // Data selecionada\n                  ...(dataSelecionada && dia === dataSelecionada.dia && mesAtual === dataSelecionada.mes && anoAtual === dataSelecionada.ano ? {\n                    background: selectDateColor,\n                    border: '2px solid #fff',\n                    color: '#fff'\n                  } : {})\n                },\n                children: dia !== null ? dia : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendario, \"jyie/QCp1ZLaNL68pPDflFf1zCo=\", false, function () {\n  return [useCalendarContext];\n});\n_c = Calendario;\nexport default Calendario;\nvar _c;\n$RefreshReg$(_c, \"Calendario\");","map":{"version":3,"names":["React","useState","useEffect","C","useCalendarContext","Axios","Input","Button","axios","jsxDEV","_jsxDEV","Calendario","_s","selecionarData","mesAtual","setMesAtual","Date","getMonth","anoAtual","setAnoAtual","getFullYear","dataSelecionada","setDataSelecionada","formData","setFormData","title","activityType","subject","date","note","selectDateColor","currentDateColor","nomesDosMeses","proximoMes","mesAnterior","handleSelecionarDia","dia","mes","ano","dateConvertDb","get","then","response","console","log","helpRequest","alert","getDaysInMonth","year","month","setMonth","setDate","getDate","numeroDeDias","primeiroDiaSemana","getDay","linhas","Math","ceil","isDiaAtual","dataAtual","diaAtual","mesAtualSelecionado","criarArrayDeDias","dias","linha","semana","diaDaSemana","push","colorControl","dataTest","testRegistros","data","registros","background","mensagem","MainContent","children","CalendarioContainer","TitleContent","position","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Title","CalendarioTable","CalendarioThread","CalendarioTr","CalendarioTd","CalendarioTBody","map","index","RadiusContent","day","style","border","color","_c","$RefreshReg$"],"sources":["B:/4 Sem FATEC/goStudent 3.0/client/src/components/Calendario/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as C from './styles';\r\nimport { useCalendarContext } from '../../context/DataContext';\r\nimport Axios from \"axios\";\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\nimport axios from 'axios';\r\n\r\nconst Calendario = () => {\r\n    // --------------------------------- States ---------------------------------\r\n\r\n    // Context\r\n    const { selecionarData } = useCalendarContext();\r\n\r\n    // Pega o dia/ mês atual do sistema\r\n    const [mesAtual, setMesAtual] = useState(new Date().getMonth() + 1);\r\n    const [anoAtual, setAnoAtual] = useState(new Date().getFullYear());\r\n    // State de controle da data selecionada\r\n    const [dataSelecionada, setDataSelecionada] = useState(null);\r\n    // State de controle da box Adicionar tarefa\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        activityType: '',\r\n        subject: '',\r\n        date: '',\r\n        note: '',\r\n    });\r\n\r\n    // --------------------------------- Variaveis estaticas de controle ---------------------------------\r\n\r\n    // Cores de selação da data\r\n    const selectDateColor = '#3282B8';\r\n    const currentDateColor = 'rgb(66, 135, 245, 0.4)';\r\n\r\n    // Array para controle do titulo\r\n    // Varia de acordo com o mesAtual\r\n    const nomesDosMeses = [\r\n        'Janeiro',\r\n        'Fevereiro',\r\n        'Março',\r\n        'Abril',\r\n        'Maio',\r\n        'Junho',\r\n        'Julho',\r\n        'Agosto',\r\n        'Setembro',\r\n        'Outubro',\r\n        'Novembro',\r\n        'Dezembro',\r\n    ];\r\n\r\n    // --------------------------------- Funções de interação ---------------------------------\r\n\r\n    // Função do botão prixmo mês\r\n    const proximoMes = () => {\r\n        if (mesAtual === 12) { //Verifica se o mês atual do calendario é Dezembro\r\n            setMesAtual(1); //Se for volta para o mês 1 e avança +1 no anoAtual\r\n            setAnoAtual(anoAtual + 1);\r\n        } else {\r\n            setMesAtual(mesAtual + 1);\r\n        }\r\n        setDataSelecionada(null);\r\n    };\r\n\r\n    // Função do botão prixmo mês\r\n    const mesAnterior = () => {\r\n        if (mesAtual === 1) { //Verifica se o mês atual do calendario é Janeiro\r\n            setMesAtual(12); //Se for volta para o mês 12 e recua -1 no anoAtual\r\n            setAnoAtual(anoAtual - 1);\r\n        } else {\r\n            setMesAtual(mesAtual - 1);\r\n        }\r\n        setDataSelecionada(null);\r\n    };\r\n\r\n    // Função para lidar com a seleção de um dia\r\n    const handleSelecionarDia = (dia, mes, ano) => {\r\n        setDataSelecionada({ dia, mes, ano });\r\n        selecionarData({ dia, mes, ano });\r\n\r\n        let dateConvertDb = ano + \"/\" + mes + \"/\" + dia;\r\n\r\n        Axios.get(() => {\r\n            Axios.get(\"http://localhost:3001/getDateData\", {\r\n                date: dateConvertDb,\r\n            }).then((response) => {\r\n                console.log(response);\r\n            });\r\n        }, []);\r\n\r\n        // Construir a mensagem do alert com a data completa\r\n        //const mensagem = `Data selecionada: ${dia}/${mes}/${ano}`;\r\n        //alert(mensagem)\r\n    };\r\n\r\n    const helpRequest = () => {\r\n        alert(\"Desenvolver pagina de ajuda\")\r\n    }\r\n\r\n    // --------------------------------- Funções principais ---------------------------------\r\n\r\n    // Função responsavel por retornar a quantidade de dias de um determinado (ano, mês) sendo passado por parametro\r\n    // Cada mês tem sua quantidade de dias\r\n    const getDaysInMonth = (year, month) => {\r\n        const date = new Date(year, month - 1, 1); //Pega o primeiro dia do mes (ex: 1/9/2023 : outubro)\r\n        date.setMonth(date.getMonth() + 1); //Avança um mês (soma + 1 no mês, ex: 1/10/2023)\r\n        date.setDate(date.getDate() - 1); //Volta um dia para pegar o ultimo dia do mes (ex: 31/9/2023)\r\n        return date.getDate(); // Retorna apenas o dia\r\n    };\r\n\r\n    // Variaveis de controle de calendario\r\n    const numeroDeDias = getDaysInMonth(anoAtual, mesAtual); // Chama a função getDaysInMonth para pegar quantos dias a no mês\r\n    const primeiroDiaSemana = new Date(anoAtual, mesAtual - 1, 1).getDay(); // Armazena o dia da semana em que o mês começa (0 para domingo, 1 para segunda, etc.).\r\n    const linhas = Math.ceil((numeroDeDias + primeiroDiaSemana) / 7); // Calcula a quantidade de linhas para o calendario (ex: numeroDeDias=30 + primeiroDiaSemana=4 / 7'dias da semana')\r\n\r\n    // Função que verifica se o dia atual é igual ao dia que está sendo montado no calendario\r\n    const isDiaAtual = (dia) => {\r\n        const dataAtual = new Date(); // Pega o calendario do sistema\r\n        const diaAtual = dataAtual.getDate(); // Pega o dia atual do calendario\r\n        const mesAtualSelecionado = dataAtual.getMonth() + 1; // Pega o mês atual do sistema\r\n        return dia === diaAtual && mesAtual === mesAtualSelecionado; // Compara o dia que está sendo montado com o dia atual, mesma coisa para o mes (retorna um boolean)\r\n    };\r\n\r\n    // Função para criar um array bidimensional para representar os dias do calendario\r\n    const criarArrayDeDias = () => {\r\n        const dias = []; // Array que vai armazenar os dias do calendario\r\n        for (let linha = 0; linha < linhas; linha++) { // Loop para percorrer as linhas do calendario calculada anteriormente (Quntidade de semanas do mês)\r\n            const semana = []; // Para cada linha, criamos um array vazio para representar os dias dessa semana\r\n            for (let diaDaSemana = 0; diaDaSemana < 7; diaDaSemana++) { // Loop para percorrer os dias da semana (0 a 6, representando domingo a sábado)\r\n                const dia = linha * 7 + diaDaSemana - primeiroDiaSemana + 1; // Calculo do valor do dia atual (pode ser um valor positivo representando o dia do mês, ou null se estivermos antes do início do mês ou após o final do mês)\r\n                semana.push(dia > 0 && dia <= numeroDeDias ? dia : null); // Monta o array com os dias calculados (de domingo a sabado) \r\n            }\r\n            dias.push(semana);\r\n            // Monta o array dia com os dias da array da semana  ex: \r\n            // [null, null, 1, 2, 3, 4, 5], // Primeira semana\r\n            // [6, 7, 8, 9, 10, 11, 12],   // Segunda semana\r\n            // [13, 14, 15, 16, 17, 18, 19],  // Terceira semana\r\n            // [20, 21, 22, 23, 24, 25, 26],  // Quarta semana\r\n            // [27, 28, 29, 30, null, null, null]  // Quinta semana)\r\n        }\r\n        return dias;\r\n    };\r\n\r\n    // Função para controlar as cores do calendario dependendo de quantas atividades há no dia\r\n    const colorControl = (dia, mes, ano) => {\r\n        let dataTest = '11/10/2023'; // Data deve ter 2 registros\r\n        let testRegistros = 2; // Valor de teste reprensentando a quantidade de registros da 'data' no Db\r\n\r\n        // Data sendo escrita no calendario e para pesquisa no db\r\n        let data = dia + '/' + mes + '/' + ano;\r\n\r\n        // Verifica se há algum registro no Db\r\n        let registros = data === dataTest ? testRegistros : null;\r\n\r\n        // Checar no banco se há registros nesse dia\r\n        if (registros) {\r\n            let colorControl = 'rgb(242, 41, 59';\r\n            switch (registros) {\r\n                case 1:\r\n                    return { background: colorControl + ', 0.4' };\r\n                case 2:\r\n                    return { background: colorControl + ', 0.6' };\r\n                case 3:\r\n                    return { background: colorControl + ', 0.7' };\r\n                case 4:\r\n                    return { background: colorControl + ', 0.9' };\r\n                default:\r\n                    return { background: '#f9f9f9' };\r\n            }\r\n        }\r\n\r\n        // Construir a mensagem do alert com a data completa\r\n        const mensagem = `Data: ${dia}/${mes}/${ano}`;\r\n        //alert(mensagem)\r\n    };\r\n\r\n    return (\r\n        <C.MainContent>\r\n            <C.CalendarioContainer>\r\n                <C.TitleContent>\r\n                    <C.Button position='left' onClick={mesAnterior}>&lt;</C.Button>\r\n                    <C.Title>{`${nomesDosMeses[mesAtual - 1]}  ${anoAtual}`}</C.Title>\r\n                    <C.Button position='right' onClick={proximoMes}>&gt;</C.Button>\r\n                </C.TitleContent>\r\n                <C.CalendarioTable>\r\n                    <C.CalendarioThread>\r\n                        <C.CalendarioTr>\r\n                            <C.CalendarioTd>Dom</C.CalendarioTd>\r\n                            <C.CalendarioTd>Seg</C.CalendarioTd>\r\n                            <C.CalendarioTd>Ter</C.CalendarioTd>\r\n                            <C.CalendarioTd>Qua</C.CalendarioTd>\r\n                            <C.CalendarioTd>Qui</C.CalendarioTd>\r\n                            <C.CalendarioTd>Sex</C.CalendarioTd>\r\n                            <C.CalendarioTd>Sab</C.CalendarioTd>\r\n                        </C.CalendarioTr>\r\n                    </C.CalendarioThread>\r\n                    <C.CalendarioTBody>\r\n                        {criarArrayDeDias().map((semana, index) => (\r\n                            <C.CalendarioTr key={index}>\r\n                                {semana.map((dia, index) => (\r\n                                    <C.CalendarioTd\r\n                                        key={index}\r\n                                        onClick={() => {\r\n                                            if (dia !== null)\r\n                                                handleSelecionarDia(dia, mesAtual, anoAtual);\r\n                                        }}\r\n                                    >\r\n                                        <C.RadiusContent\r\n                                            day={dia}\r\n                                            style={{\r\n                                                // Data atual\r\n                                                ...dia !== null && isDiaAtual(dia) ? { background: currentDateColor, border: '1px solid #fff' } : {},\r\n                                                // Controle de cores de acordo com a quantidade de atv cadastradas \r\n                                                ...colorControl(dia, mesAtual, anoAtual),\r\n                                                // Data selecionada\r\n                                                ...(dataSelecionada && dia === dataSelecionada.dia && mesAtual === dataSelecionada.mes && anoAtual === dataSelecionada.ano\r\n                                                    ? { background: selectDateColor, border: '2px solid #fff', color: '#fff' } : {})\r\n                                            }}>\r\n                                            {dia !== null ? dia : ''}\r\n                                        </C.RadiusContent>\r\n                                    </C.CalendarioTd>\r\n                                ))}\r\n                            </C.CalendarioTr>\r\n                        ))}\r\n                    </C.CalendarioTBody>\r\n                </C.CalendarioTable>\r\n            </C.CalendarioContainer>\r\n        </C.MainContent>\r\n    );\r\n};\r\n\r\nexport default Calendario;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}