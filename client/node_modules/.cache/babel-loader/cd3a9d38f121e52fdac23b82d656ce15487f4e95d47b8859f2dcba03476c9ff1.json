{"ast":null,"code":"var _jsxFileName = \"K:\\\\4 Sem FATEC\\\\goStudent 3.0\\\\GoStudent\\\\client\\\\src\\\\components\\\\TaskInfo\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as C from './styles';\nimport { useCalendarContext } from '../../context/DataContext';\nimport Axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faTurnUp, faPen } from '@fortawesome/free-solid-svg-icons';\nimport Input from '../Input';\nimport Button from '../Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddTask = () => {\n  _s();\n  // Pegando useCalendarContext do contexto\n  const {\n    dataSelecionada,\n    isTaskInfoVisible,\n    showWeeklyTask,\n    listDataSelecionada,\n    setListData\n  } = useCalendarContext();\n\n  // State para guardar as informações das input\n  const [values, setValues] = useState();\n  const handleClickButton = () => {\n    // Formatação da data para o DB\n    const {\n      dia,\n      mes,\n      ano\n    } = dataSelecionada;\n    const dataFormatada = ano + \"/\" + mes + \"/\" + dia;\n    //console.log(\"Data: \", dataSelecionada);\n\n    //console.log(values);\n  };\n\n  var dataString = null;\n  useEffect(() => {\n    if (listDataSelecionada) {\n      const dataHora = listDataSelecionada[0].eve_dataHora;\n      // Convertendo a string para um objeto Date\n      // Extraindo apenas a parte da data\n\n      dataString = dataHora;\n\n      // //values.data = dataSelecionada;\n      // console.log(dataSelecionada);\n      // // Criando as const para manipular a data\n      // const { dia, mes, ano } = dataSelecionada;\n      // // O mês começa do zero (janeiro é 0)\n      // const novaData = new Date(ano, mes - 1, dia);\n      // // Convertendo a data para uma string no formato desejado (dd/mm/yyyy)\n      // var dataString = novaData.toLocaleDateString('pt-BR');\n    } else {\n      // Converter a data e hora para o formato padrão Brasil\n      // const dataHora = new Date(dataSelecionada);\n      // const data = new Date(dataHora.getFullYear(), dataHora.getMonth(), dataHora.getDate());\n\n      // const dia = data.getDate();\n      // const mes = data.getMonth() + 1;\n      // const ano = data.getFullYear();\n\n      dataString = dataSelecionada;\n    }\n  }, []);\n  const handleClickExit = () => {\n    showWeeklyTask();\n    setListData(null);\n  };\n\n  // ---------- LOG -----------\n  //console.log(\"Data selecionada: \", dataString);\n  //console.log(\"Data selecionada: \", dataSelecionada);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isTaskInfoVisible && /*#__PURE__*/_jsxDEV(C.AddContainer, {\n      children: [/*#__PURE__*/_jsxDEV(C.TopAddContainer, {\n        children: [/*#__PURE__*/_jsxDEV(C.TopIconsContent, {\n          children: [/*#__PURE__*/_jsxDEV(C.IconsContent, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTurnUp,\n              rotation: 270,\n              onClick: handleClickExit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(C.IconsContent, {\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.TopAddContent, {\n          children: [/*#__PURE__*/_jsxDEV(C.DefaultA, {\n            onClick: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(C.Title, {\n            color: \"#fff\",\n            children: \"Resumo da data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(C.DefaultA, {\n            onClick: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(C.MainAddCointainer, {\n        children: [/*#__PURE__*/_jsxDEV(C.LabelContent, {\n          children: /*#__PURE__*/_jsxDEV(C.Label, {\n            children: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.LabelContent, {\n          children: /*#__PURE__*/_jsxDEV(C.Label, {\n            children: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.LabelContent, {\n          children: /*#__PURE__*/_jsxDEV(C.Label, {\n            children: null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.LabelContent, {\n          children: /*#__PURE__*/_jsxDEV(C.Label, {\n            children: dataString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.LabelContent, {\n          children: /*#__PURE__*/_jsxDEV(C.Label, {\n            children: nul\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(C.IconsContent, {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(AddTask, \"fA/LJTPeat4JYT6yZsIptnl9mBI=\", false, function () {\n  return [useCalendarContext];\n});\n_c = AddTask;\nexport default AddTask;\nvar _c;\n$RefreshReg$(_c, \"AddTask\");","map":{"version":3,"names":["React","useEffect","useState","C","useCalendarContext","Axios","FontAwesomeIcon","faTrash","faTurnUp","faPen","Input","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","AddTask","_s","dataSelecionada","isTaskInfoVisible","showWeeklyTask","listDataSelecionada","setListData","values","setValues","handleClickButton","dia","mes","ano","dataFormatada","dataString","dataHora","eve_dataHora","handleClickExit","children","AddContainer","TopAddContainer","TopIconsContent","IconsContent","icon","rotation","onClick","fileName","_jsxFileName","lineNumber","columnNumber","TopAddContent","DefaultA","Title","color","MainAddCointainer","LabelContent","Label","nul","_c","$RefreshReg$"],"sources":["K:/4 Sem FATEC/goStudent 3.0/GoStudent/client/src/components/TaskInfo/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as C from './styles';\r\nimport { useCalendarContext } from '../../context/DataContext';\r\nimport Axios from \"axios\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faTurnUp, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\n\r\nconst AddTask = () => {\r\n    // Pegando useCalendarContext do contexto\r\n    const { dataSelecionada, isTaskInfoVisible, showWeeklyTask, listDataSelecionada, setListData } = useCalendarContext();\r\n\r\n    // State para guardar as informações das input\r\n    const [values, setValues] = useState();\r\n\r\n\r\n    const handleClickButton = () => {\r\n        // Formatação da data para o DB\r\n        const { dia, mes, ano } = dataSelecionada;\r\n        const dataFormatada = ano + \"/\" + mes + \"/\" + dia;\r\n        //console.log(\"Data: \", dataSelecionada);\r\n\r\n        //console.log(values);\r\n    }\r\n\r\n    var dataString = null;\r\n    useEffect(() => {\r\n        if (listDataSelecionada) {\r\n            const dataHora = listDataSelecionada[0].eve_dataHora;\r\n            // Convertendo a string para um objeto Date\r\n            // Extraindo apenas a parte da data\r\n\r\n\r\n            dataString = dataHora;\r\n\r\n            // //values.data = dataSelecionada;\r\n            // console.log(dataSelecionada);\r\n            // // Criando as const para manipular a data\r\n            // const { dia, mes, ano } = dataSelecionada;\r\n            // // O mês começa do zero (janeiro é 0)\r\n            // const novaData = new Date(ano, mes - 1, dia);\r\n            // // Convertendo a data para uma string no formato desejado (dd/mm/yyyy)\r\n            // var dataString = novaData.toLocaleDateString('pt-BR');\r\n        } else {\r\n            // Converter a data e hora para o formato padrão Brasil\r\n            // const dataHora = new Date(dataSelecionada);\r\n            // const data = new Date(dataHora.getFullYear(), dataHora.getMonth(), dataHora.getDate());\r\n\r\n            // const dia = data.getDate();\r\n            // const mes = data.getMonth() + 1;\r\n            // const ano = data.getFullYear();\r\n\r\n            dataString = dataSelecionada;\r\n        }\r\n    }, []);\r\n\r\n    const handleClickExit = () => {\r\n        showWeeklyTask();\r\n        setListData(null);\r\n    }\r\n\r\n    // ---------- LOG -----------\r\n    //console.log(\"Data selecionada: \", dataString);\r\n    //console.log(\"Data selecionada: \", dataSelecionada);\r\n\r\n    return (\r\n        <>\r\n            {isTaskInfoVisible && (\r\n                <C.AddContainer>\r\n                    <C.TopAddContainer>\r\n                        <C.TopIconsContent>\r\n                            <C.IconsContent>\r\n                                <FontAwesomeIcon icon={faTurnUp} rotation={270} onClick={handleClickExit} />\r\n                            </C.IconsContent>\r\n                            <C.IconsContent>\r\n                                <FontAwesomeIcon icon={faPen} />\r\n                            </C.IconsContent>\r\n                        </C.TopIconsContent>\r\n                        <C.TopAddContent>\r\n                            <C.DefaultA onClick={null}></C.DefaultA>\r\n                            <C.Title color='#fff'>Resumo da data</C.Title>\r\n                            <C.DefaultA onClick={null}></C.DefaultA>\r\n                        </C.TopAddContent>\r\n                    </C.TopAddContainer>\r\n                    <C.MainAddCointainer>\r\n                        <C.LabelContent>\r\n                            <C.Label>{null}</C.Label>\r\n                        </C.LabelContent>\r\n                        <C.LabelContent>\r\n                            <C.Label>{null}</C.Label>\r\n                        </C.LabelContent>\r\n                        <C.LabelContent>\r\n                            <C.Label>{null}</C.Label>\r\n                        </C.LabelContent>\r\n                        <C.LabelContent>\r\n                            <C.Label>{dataString}</C.Label>\r\n                        </C.LabelContent>\r\n                        <C.LabelContent>\r\n                            <C.Label>{nul}</C.Label>\r\n                        </C.LabelContent>\r\n                        <C.IconsContent>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </C.IconsContent>\r\n                    </C.MainAddCointainer>\r\n                </C.AddContainer>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}