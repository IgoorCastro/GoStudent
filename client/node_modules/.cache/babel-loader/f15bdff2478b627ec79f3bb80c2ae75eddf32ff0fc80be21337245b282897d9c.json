{"ast":null,"code":"var _jsxFileName = \"B:\\\\4 Sem FATEC\\\\goStudent 3.0\\\\client\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// --------- Contexto global: Data selecionada e controle do component TaskInfo ---------------\n// Contexto para controlar a visibilidade do componente e a data selecionada\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Hook personalizado para acessar o contexto\nexport const useCalendarContext = () => {\n  _s();\n  return useContext(DataContext);\n};\n\n// Componente de contexto que manterá o dado e a visibilidade\n_s(useCalendarContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [dataSelecionada, setDataSelecionada] = useState(null);\n  const [isTaskInfoVisible, setIsTaskInfoVisible] = useState(false);\n  const [isTaskAddVisible, setIsTaskAddVisible] = useState(false);\n  const selecionarData = listData => {\n    if (listData && listData.length > 0) setDataSelecionada(listData);\n    console.log(\"Context: \", dataSelecionada);\n    if (dataSelecionada) {\n      setIsTaskInfoVisible(true); // Mostrar o componente quando a data for selecionada\n      setIsTaskAddVisible(false);\n    }\n  };\n  const showAddTask = () => {\n    setIsTaskInfoVisible(false); // Fecha o component 'TaskInfo'\n    setIsTaskAddVisible(true); // Mostra o component 'TaskAdd'\n  };\n\n  const toggleComponentVisibility = () => {\n    setIsTaskInfoVisible(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      dataSelecionada,\n      selecionarData,\n      isTaskInfoVisible,\n      toggleComponentVisibility,\n      isTaskAddVisible,\n      showAddTask\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s2(DataProvider, \"d8B4i6rr+YQiOv6yz6fhx3WAz14=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","DataContext","useCalendarContext","_s","DataProvider","children","_s2","dataSelecionada","setDataSelecionada","isTaskInfoVisible","setIsTaskInfoVisible","isTaskAddVisible","setIsTaskAddVisible","selecionarData","listData","length","console","log","showAddTask","toggleComponentVisibility","prevState","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["B:/4 Sem FATEC/goStudent 3.0/client/src/context/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\n// --------- Contexto global: Data selecionada e controle do component TaskInfo ---------------\r\n// Contexto para controlar a visibilidade do componente e a data selecionada\r\nconst DataContext = createContext();\r\n\r\n// Hook personalizado para acessar o contexto\r\nexport const useCalendarContext = () => {\r\n    return useContext(DataContext);\r\n};\r\n\r\n// Componente de contexto que manterá o dado e a visibilidade\r\nexport const DataProvider = ({ children }) => {\r\n    const [dataSelecionada, setDataSelecionada] = useState(null);\r\n    const [isTaskInfoVisible, setIsTaskInfoVisible] = useState(false);\r\n    const [isTaskAddVisible, setIsTaskAddVisible] = useState(false);\r\n\r\n    const selecionarData = (listData) => {\r\n        if (listData && listData.length > 0)\r\n            setDataSelecionada(listData);\r\n        console.log(\"Context: \", dataSelecionada);\r\n        if (dataSelecionada) {\r\n            setIsTaskInfoVisible(true); // Mostrar o componente quando a data for selecionada\r\n            setIsTaskAddVisible(false);\r\n        }\r\n    };\r\n\r\n    const showAddTask = () => {\r\n        setIsTaskInfoVisible(false); // Fecha o component 'TaskInfo'\r\n        setIsTaskAddVisible(true); // Mostra o component 'TaskAdd'\r\n    }\r\n\r\n    const toggleComponentVisibility = () => {\r\n        setIsTaskInfoVisible(prevState => !prevState);\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{ dataSelecionada, selecionarData, isTaskInfoVisible, toggleComponentVisibility, isTaskAddVisible, showAddTask }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,OAAON,UAAU,CAACI,WAAW,CAAC;AAClC,CAAC;;AAED;AAAAE,EAAA,CAJaD,kBAAkB;AAK/B,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMe,cAAc,GAAIC,QAAQ,IAAK;IACjC,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,EAC/BP,kBAAkB,CAACM,QAAQ,CAAC;IAChCE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,eAAe,CAAC;IACzC,IAAIA,eAAe,EAAE;MACjBG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC5BE,mBAAmB,CAAC,KAAK,CAAC;IAC9B;EACJ,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtBR,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7BE,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,CAAC;;EAED,MAAMO,yBAAyB,GAAGA,CAAA,KAAM;IACpCT,oBAAoB,CAACU,SAAS,IAAI,CAACA,SAAS,CAAC;EACjD,CAAC;EAED,oBACIpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEf,eAAe;MAAEM,cAAc;MAAEJ,iBAAiB;MAAEU,yBAAyB;MAAER,gBAAgB;MAAEO;IAAY,CAAE;IAAAb,QAAA,EACzIA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACpB,GAAA,CA7BWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}